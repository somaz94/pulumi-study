# vpc.py
from pulumi_gcp import compute
from config import NETWORK, REGION, SUBNET_A, SUBNET_B, IGW
from utils import resource_name
import pulumi_gcp as gcp

def create_vpc():
    # Create a new VPC
    vpc = compute.Network(resource_name(NETWORK),
        name=resource_name(NETWORK), # Adding name=resource_name (RESOURCE_NAME) to each resource creation overrides random suffixes generated by Pulumi's auto-naming feature
        auto_create_subnetworks=False,
        description=f"{resource_name(NETWORK)} network",
    )

    # Create an Internet Gateway for the VPC
    igw = compute.GlobalAddress(resource_name(IGW),
        name=resource_name(IGW),
        description=f"{resource_name(IGW)} network",
    )

    # Create a Subnet within the VPC
    subnet = compute.Subnetwork(resource_name(SUBNET_A),
        name=resource_name(SUBNET_A),
        network=vpc.self_link,
        ip_cidr_range="10.85.51.0/24",
        region=REGION,
        description=f"{resource_name(SUBNET_A)} network",
    )
    subnet = compute.Subnetwork(resource_name(SUBNET_B),
        name=resource_name(SUBNET_B),
        network=vpc.self_link,
        ip_cidr_range="10.85.52.0/24",
        region=REGION,
        description=f"{resource_name(SUBNET_B)} network",
    )

    return vpc, igw, subnet

def create_shared_vpc_host_project(host_project_id):
    # Host 프로젝트를 Shared VPC로 설정
    shared_vpc_host_project = gcp.compute.SharedVPCHostProject(
        resource_name("shared-vpc-host"),
        project=host_project_id
    )
    return shared_vpc_host_project

def attach_service_projects_to_shared_vpc(host_project_id, service_project_ids):
    attached_service_projects = []
    for service_project_id in service_project_ids:
        # 각 서비스 프로젝트를 Shared VPC에 연결
        service_project_attachment = gcp.compute.SharedVPCServiceProject(
            resource_name(f"shared-vpc-service-{service_project_id}"),
            service_project=service_project_id,
            host_project=host_project_id
        )
        attached_service_projects.append(service_project_attachment)
    
    return attached_service_projects
