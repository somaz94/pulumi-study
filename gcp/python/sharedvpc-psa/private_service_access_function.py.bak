# private_service_access.py
import pulumi
import pulumi_gcp as gcp
from pulumi_gcp import servicenetworking 
from utils import resource_name
from config import PRIVATE_SERVICE_IP, PRIVATE_SERVICE_PREFIX

def create_private_service_access(vpc):
    # Create a reserved IP range for Private Service Access
    reserved_range = gcp.compute.GlobalAddress(resource_name("private-service-range"),
        name=resource_name("private-service-range"),
        address_type="INTERNAL",
        purpose="VPC_PEERING",
        address=PRIVATE_SERVICE_IP,
        prefix_length=PRIVATE_SERVICE_PREFIX,
        network=vpc.id,  # Change from self_link to id
        description="Reserved IP range for Private Service Access",
        opts=pulumi.ResourceOptions(depends_on=[vpc])
    )

    # Use the apply method on the output attributes (name) of vpc and reserved_range
    def create_service_connection(args):
        vpc_name, range_name = args
        return servicenetworking.Connection(resource_name("private-service-connection"),
            network=vpc_name,
            reserved_peering_ranges=[range_name],
            service="servicenetworking.googleapis.com",
            opts=pulumi.ResourceOptions(depends_on=[reserved_range])  # ensuring connection is made after address reservation
        )

    service_connection = pulumi.Output.all(vpc.name, reserved_range.name).apply(create_service_connection)

    return reserved_range, service_connection

